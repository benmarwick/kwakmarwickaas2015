legend_title <- "site"
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID, shape = ID )) +
geom_point(size = 4) +
theme_minimal(base_size = 25) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
labs(colour=legend_title, shape = legend_title) +
xlim(-40,-10) +
ylim(-40,-10) +
coord_fixed(ratio=1) +
theme(plot.margin = unit(c(1,1,1,1), "mm"))
legend_title <- "site"
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID, shape = ID )) +
geom_point(size = 4) +
theme_minimal(base_size = 25) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
labs(colour=legend_title, shape = legend_title) +
xlim(-40,-10) +
ylim(-40,-10) +
coord_fixed(ratio=1) +
theme(plot.margin = unit(c(1,1,1,1), "mm"))
legend_title <- "site"
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID, shape = ID )) +
geom_point(size = 5) +
theme_minimal(base_size = 25) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
labs(colour=legend_title, shape = legend_title) +
xlim(-40,-10) +
ylim(-40,-10) +
coord_fixed(ratio=1) +
theme(plot.margin = unit(c(1,1,1,1), "mm"))
}
legend_title <- "site"
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID, shape = ID )) +
geom_point(size = 4) +
theme_minimal(base_size = 25) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
labs(colour=legend_title, shape = legend_title) +
xlim(-40,-10) +
ylim(-40,-10) +
coord_fixed(ratio=1) +
theme(plot.margin = unit(c(1,1,1,1), "mm"))
legend_title <- "site"
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID, shape = ID )) +
geom_point(size = 4.5) +
theme_minimal(base_size = 25) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
labs(colour=legend_title, shape = legend_title) +
xlim(-40,-10) +
ylim(-40,-10) +
coord_fixed(ratio=1) +
theme(plot.margin = unit(c(1,1,1,1), "mm"))
}
SOS049 <- read.csv(file="~/JAS/GC_MS_exported_data_Figure5.csv", header=TRUE, sep=",")
ggplot2::ggplot(SOS049, aes(retention, area)) +
geom_line(colour = "blue") +
theme_minimal(base_size = 20) +
xlab("retention time (min)") +
scale_y_continuous(name="abundance", labels = comma) +
annotate("text", x = 20, y = 3000000, label="C16:0", angle = 90) +
annotate("text", x = 24.5, y = 5000000, label="C18:0", angle = 90) +
annotate("text", x = 28.5, y = 2500000, label="C20:0", angle = 90) +
annotate("text", x = 32.5, y = 2000000, label="C22:0", angle = 90) +
annotate("text", x = 36, y = 2300000, label="C24:0", angle = 90) +
annotate("text", x = 39.5, y = 1500000, label="IS", angle = 90) +
annotate("text", x = 23, y = 1750000, label="phytanic acid", angle = 90)
}
SOS049 <- read.csv(file="~/JAS/GC_MS_exported_data_Figure5.csv", header=TRUE, sep=",")
SOS049 <- read.csv(file="~/JAS/GC_MS_exported_data_Figure5.csv", header=TRUE, sep=",")
SOS049 <- read.csv(file="GC-MS_exported_data_Figure5.csv", header=TRUE, sep=",")
ggplot2::ggplot(SOS049, aes(retention, area)) +
geom_line(colour = "blue") +
theme_minimal(base_size = 25) +
xlab("retention time (min)") +
scale_y_continuous(name="abundance", labels = comma) +
annotate("text", x = 20, y = 3000000, label="C16:0", angle = 90) +
annotate("text", x = 24.5, y = 5000000, label="C18:0", angle = 90) +
annotate("text", x = 28.5, y = 2500000, label="C20:0", angle = 90) +
annotate("text", x = 32.5, y = 2000000, label="C22:0", angle = 90) +
annotate("text", x = 36, y = 2300000, label="C24:0", angle = 90) +
annotate("text", x = 39.5, y = 1500000, label="IS", angle = 90) +
annotate("text", x = 23, y = 1750000, label="phytanic acid", angle = 90)
}
ggplot2::ggplot(SOS049, aes(retention, area)) +
geom_line(colour = "blue") +
theme_minimal(base_size = 20) +
xlab("retention time (min)") +
scale_y_continuous(name="abundance", labels = comma) +
annotate("text", x = 20, y = 3000000, label="C16:0", angle = 90) +
annotate("text", x = 24.5, y = 5000000, label="C18:0", angle = 90) +
annotate("text", x = 28.5, y = 2500000, label="C20:0", angle = 90) +
annotate("text", x = 32.5, y = 2000000, label="C22:0", angle = 90) +
annotate("text", x = 36, y = 2300000, label="C24:0", angle = 90) +
annotate("text", x = 39.5, y = 1500000, label="IS", angle = 90) +
annotate("text", x = 23, y = 1750000, label="phytanic acid", angle = 90)
}
ggplot2::ggplot(SOS049, aes(retention, area)) +
geom_line(colour = "blue") +
theme_minimal(base_size = 40) +
xlab("retention time (min)") +
scale_y_continuous(name="abundance", labels = comma) +
annotate("text", x = 20, y = 3000000, label="C16:0", angle = 90) +
annotate("text", x = 24.5, y = 5000000, label="C18:0", angle = 90) +
annotate("text", x = 28.5, y = 2500000, label="C20:0", angle = 90) +
annotate("text", x = 32.5, y = 2000000, label="C22:0", angle = 90) +
annotate("text", x = 36, y = 2300000, label="C24:0", angle = 90) +
annotate("text", x = 39.5, y = 1500000, label="IS", angle = 90) +
annotate("text", x = 23, y = 1750000, label="phytanic acid", angle = 90)
}
SOS049 <- read.csv(file="~/JAS/GC-MS_exported_data_Figure5.csv", header=TRUE, sep=",")
ggplot2::ggplot(SOS049, aes(retention, area)) +
geom_line(colour = "blue") +
theme_minimal(base_size = 20) +
xlab("retention time (min)") +
scale_y_continuous(name="abundance", labels = comma) +
annotate("text", x = 20, y = 3000000, label="C16:0", angle = 90) +
annotate("text", x = 24.5, y = 5000000, label="C18:0", angle = 90) +
annotate("text", x = 28.5, y = 2500000, label="C20:0", angle = 90) +
annotate("text", x = 32.5, y = 2000000, label="C22:0", angle = 90) +
annotate("text", x = 36, y = 2300000, label="C24:0", angle = 90) +
annotate("text", x = 39.5, y = 1500000, label="IS", angle = 90) +
annotate("text", x = 23, y = 1750000, label="phytanic acid", angle = 90)
}
###############################
#' make_C16_C18_scatter_plot
setwd("~/JAS")
SOS049 <- read.csv(file="~/JAS/GC-MS_exported_data_Figure5b.csv", header=TRUE, sep=",")
ggplot2::ggplot(SOS049, aes(retention, area)) +
geom_line(colour = "blue") +
theme_minimal(base_size = 20) +
xlab("retention time (min)") +
scale_y_continuous(name="abundance", labels = comma) +
annotate("text", x = 20, y = 3000000, label="C16:0", angle = 90) +
annotate("text", x = 24.5, y = 5000000, label="C18:0", angle = 90) +
annotate("text", x = 28.5, y = 2500000, label="C20:0", angle = 90) +
annotate("text", x = 32.5, y = 2000000, label="C22:0", angle = 90) +
annotate("text", x = 36, y = 2300000, label="C24:0", angle = 90) +
annotate("text", x = 39.5, y = 1500000, label="IS", angle = 90) +
annotate("text", x = 23, y = 1750000, label="phytanic acid", angle = 90)
}
library("scales", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("grid", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("ggplot2", lib.loc="C:/Program Files/R/R-3.2.0/library")
SOS049 <- read.csv(file="~/JAS/GC-MS_exported_data_Figure5b.csv", header=TRUE, sep=",")
ggplot2::ggplot(SOS049, aes(retention, area)) +
geom_line(colour = "blue") +
theme_minimal(base_size = 20) +
xlab("retention time (min)") +
scale_y_continuous(name="abundance", labels = comma) +
annotate("text", x = 20, y = 3000000, label="C16:0", angle = 90) +
annotate("text", x = 24.5, y = 5000000, label="C18:0", angle = 90) +
annotate("text", x = 28.5, y = 2500000, label="C20:0", angle = 90) +
annotate("text", x = 32.5, y = 2000000, label="C22:0", angle = 90) +
annotate("text", x = 36, y = 2300000, label="C24:0", angle = 90) +
annotate("text", x = 39.5, y = 1500000, label="IS", angle = 90) +
annotate("text", x = 23, y = 1750000, label="phytanic acid", angle = 90)
}
SOS049 <- read.csv(file="~/JAS/GC-MS_exported_data_Figure5b.csv", header=TRUE, sep=",")
ggplot2::ggplot(SOS049, aes(retention, area)) +
geom_line(colour = "blue") +
theme_minimal(base_size = 20) +
scale_y_continuous(name="abundance", labels = comma)
SOS049 <- read.csv(file="~/JAS/GC-MS_exported_data_Figure5b.csv", header=TRUE, sep=",")
# Create graph using values of retention time and area.
ggplot2::ggplot(SOS049, aes(retention, area)) +
geom_line(colour = "blue") +
theme_minimal(base_size = 20) +
xlab("retention time (min)") +
scale_y_continuous(name="abundance", labels = comma)
}
SOS049 <- read.csv(file="~/JAS/GC-MS_exported_data_Figure5b.csv", header=TRUE, sep=",")
# Create graph using values of retention time and area.
ggplot2::ggplot(SOS049, aes(retention, area)) +
geom_line(colour = "blue") +
theme_minimal(base_size = 20) +
xlab("retention time (min)") +
scale_y_continuous(name="abundance", labels = comma)
}
SOS049 <- read.csv(file="~/JAS/GC-MS_exported_data_Figure5b.csv", header=TRUE, sep=",")
# Create graph using values of retention time and area.
ggplot2::ggplot(SOS049, aes(retention, area)) +
geom_line(colour = "blue") +
theme_minimal(base_size = 20) +
xlab("retention time (min)") +
scale_y_continuous(name="abundance", labels = comma)
}
dates_KM <- read.csv('data/radiocarbon_KM.csv', stringsAsFactors = FALSE)
setwd("G:/My Documents/My Papers/Journal of Archaeological Science/Kwak and Marwick 2015/kwakmarwickjas2015/analysis")
dates_KM <- read.csv('data/radiocarbon_KM.csv', stringsAsFactors = FALSE)
dates_SS <- read.csv('data/radiocarbon_SS.csv', stringsAsFactors = FALSE)
Uncertainty = error
dates_KM <- read.csv('data/radiocarbon_KM.csv', stringsAsFactors = FALSE)
dates_SS <- read.csv('data/radiocarbon_SS.csv', stringsAsFactors = FALSE)
# make date names
dates_KM$Name <- paste0("KM_", dates_KM[,1])
dates_SS$Name <- paste0("SS_", dates_SS[,1])
# remove spaces
dates_KM$Name <- gsub("[[:space:]]", "_", dates_KM$Name)
dates_SS$Name <- gsub("[[:space:]]", "_", dates_SS$Name)
# split age and error term
library(stringr)
# KM
date_split  <- str_split_fixed(dates_KM$C14.date..BP..uncalibrated., "pm", 2)
date_split_Age <- as.numeric(gsub("[^0-9]", "", date_split[, 1]))
date_split_Error <- as.numeric(gsub("[^0-9]", "", date_split[, 2]))
# combine into data frame
dates_KM <- data.frame(Name = dates_KM$Name,
Date = date_split_Age,
Uncertainty = date_split_Error)
# SS
date_split  <- str_split_fixed(dates_SS$C14.date..BP..uncalibrated., "\\?\\?", 2)
date_split_Age <- as.numeric(gsub("[^0-9]", "", date_split[, 1]))
date_split_Error <- as.numeric(gsub("[^0-9]", "", date_split[, 2]))
# combine into data frame
dates_SS <- data.frame(Name = dates_SS$Name,
Date = date_split_Age,
Uncertainty = date_split_Error)
# combine all dates into one...
dates <- rbind(dates_KM, dates_SS)
dates <- dates[complete.cases(dates), ]
library(Bchron)
# calibrate
ages = BchronCalibrate(ages=dates$Date, ageSds=dates$Uncertainty, calCurves=rep('intcal13', nrow(dates)))
summary(ages)
# remove NAs
dates_SS <- dates_SS[complete.cases(dates_SS),]
Dens_KM = BchronDensity(ages=dates_KM$Date, ageSds=dates_KM$Uncertainty, calCurves=rep('intcal13', nrow(dates_KM)))
Dens_SS = BchronDensity(ages=dates_SS$Date, ageSds=dates_SS$Uncertainty, calCurves=rep('intcal13', nrow(dates_SS)))
plot(Dens_KM, plotSum = T)
plot(Dens_SS, plotSum = T)
get plot parameters to make a custom plot
BchronDensity_plot_params <- function(ID, x){
n = length(x$calAges)
thetaRange = range(x$calAges[[1]]$ageGrid)
for (i in 2:n) thetaRange = range(c(thetaRange, x$calAges[[i]]$ageGrid))
dateGrid = seq(round(thetaRange[1] * 0.9, 3), round(thetaRange[2] *
1.1, 3), length = 1000)
gauss <- function(x, mu, sig) {
u <- (x - mu)/sig
y <- exp(-u * u/2)
y
}
gbase <- function(x, mus) {
sig <- (mus[2] - mus[1])/2
G <- outer(x, mus, gauss, sig)
G
}
Gstar = gbase(dateGrid, x$mu)
dens = vector(length = length(dateGrid))
for (i in 1:nrow(x$p)) {
dens = dens + Gstar %*% x$p[i, ]
}
densFinal = dens/sum(dens)
return(data.frame(ID = ID, dateGrid = dateGrid, densFinal = densFinal))
}
Dens_KM_plot <- BchronDensity_plot_params("KM", Dens_KM)
Dens_SS_plot <- BchronDensity_plot_params("SS", Dens_SS)
plot_all <- rbind(Dens_KM_plot, Dens_SS_plot)
library(ggplot2)
ggplot(plot_all, aes(dateGrid, densFinal, colour = ID)) +
geom_line(size = 0.5) +
theme_minimal(base_size = 14) +
xlab("calibrated years BP") +
ylab("Density") +
xlim(1000,4000)
library(kwakmarwickjas2015)
library(kwakmarwickjas2015)
BchronDensity_plot_params
library(kwakmarwickjas2015)
library(kwakmarwickjas2015)
---
library(kwakmarwickjas2015)
library(kwakmarwickjas2015)
library(kwakmarwickjas2015)
library(kwakmarwickjas2015)
library(kwakmarwickjas2015)
library(kwakmarwickjas2015)
library(kwakmarwickjas2015)
# read data in, three columns Name = lab code, Date = radiocarbon age, Uncertainty =  error
dates_KM <- read.csv('data/radiocarbon_KM.csv', stringsAsFactors = FALSE)
dates_SS <- read.csv('data/radiocarbon_SS.csv', stringsAsFactors = FALSE)
# make date names
dates_KM$Name <- paste0("KM_", dates_KM[,1])
dates_SS$Name <- paste0("SS_", dates_SS[,1])
# remove spaces
dates_KM$Name <- gsub("[[:space:]]", "_", dates_KM$Name)
dates_SS$Name <- gsub("[[:space:]]", "_", dates_SS$Name)
# split age and error term
library(stringr)
# KM
date_split  <- str_split_fixed(dates_KM$C14.date..BP..uncalibrated., "pm", 2)
date_split_Age <- as.numeric(gsub("[^0-9]", "", date_split[, 1]))
date_split_Error <- as.numeric(gsub("[^0-9]", "", date_split[, 2]))
# combine into data frame
dates_KM <- data.frame(Name = dates_KM$Name,
Date = date_split_Age,
Uncertainty = date_split_Error)
# SS
date_split  <- str_split_fixed(dates_SS$C14.date..BP..uncalibrated., "\\?\\?", 2)
date_split_Age <- as.numeric(gsub("[^0-9]", "", date_split[, 1]))
date_split_Error <- as.numeric(gsub("[^0-9]", "", date_split[, 2]))
# combine into data frame
dates_SS <- data.frame(Name = dates_SS$Name,
Date = date_split_Age,
Uncertainty = date_split_Error)
# combine all dates into one
dates <- rbind(dates_KM, dates_SS)
dates <- dates[complete.cases(dates), ]
# use the R package BChron...
library(Bchron)
# remove NAs
dates_SS <- dates_SS[complete.cases(dates_SS),]
# get estimation of activity through age as proxy
Dens_KM = BchronDensity(ages=dates_KM$Date, ageSds=dates_KM$Uncertainty, calCurves=rep('intcal13', nrow(dates_KM)))
Dens_SS = BchronDensity(ages=dates_SS$Date, ageSds=dates_SS$Uncertainty, calCurves=rep('intcal13', nrow(dates_SS)))
# get line for plotting
Dens_KM_plot <- BchronDensity_plot_params("KM", Dens_KM)
Dens_SS_plot <- BchronDensity_plot_params("SS", Dens_SS)
plot_all <- rbind(Dens_KM_plot, Dens_SS_plot)
setwd("G:/My Documents/My Papers/Journal of Archaeological Science/Kwak and Marwick 2015/kwakmarwickjas2015/analysis")
# read data in, three columns Name = lab code, Date = radiocarbon age, Uncertainty =  error
dates_KM <- read.csv('data/radiocarbon_KM.csv', stringsAsFactors = FALSE)
dates_SS <- read.csv('data/radiocarbon_SS.csv', stringsAsFactors = FALSE)
# make date names
dates_KM$Name <- paste0("KM_", dates_KM[,1])
dates_SS$Name <- paste0("SS_", dates_SS[,1])
# remove spaces
dates_KM$Name <- gsub("[[:space:]]", "_", dates_KM$Name)
dates_SS$Name <- gsub("[[:space:]]", "_", dates_SS$Name)
# split age and error term
library(stringr)
# KM
date_split  <- str_split_fixed(dates_KM$C14.date..BP..uncalibrated., "pm", 2)
date_split_Age <- as.numeric(gsub("[^0-9]", "", date_split[, 1]))
date_split_Error <- as.numeric(gsub("[^0-9]", "", date_split[, 2]))
# combine into data frame
dates_KM <- data.frame(Name = dates_KM$Name,
Date = date_split_Age,
Uncertainty = date_split_Error)
# SS
date_split  <- str_split_fixed(dates_SS$C14.date..BP..uncalibrated., "\\?\\?", 2)
date_split_Age <- as.numeric(gsub("[^0-9]", "", date_split[, 1]))
date_split_Error <- as.numeric(gsub("[^0-9]", "", date_split[, 2]))
# combine into data frame
dates_SS <- data.frame(Name = dates_SS$Name,
Date = date_split_Age,
Uncertainty = date_split_Error)
# combine all dates into one
dates <- rbind(dates_KM, dates_SS)
dates <- dates[complete.cases(dates), ]
# use the R package BChron...
library(Bchron)
# remove NAs
dates_SS <- dates_SS[complete.cases(dates_SS),]
# get estimation of activity through age as proxy
Dens_KM = BchronDensity(ages=dates_KM$Date, ageSds=dates_KM$Uncertainty, calCurves=rep('intcal13', nrow(dates_KM)))
Dens_SS = BchronDensity(ages=dates_SS$Date, ageSds=dates_SS$Uncertainty, calCurves=rep('intcal13', nrow(dates_SS)))
# get line for plotting
Dens_KM_plot <- BchronDensity_plot_params("KM", Dens_KM)
Dens_SS_plot <- BchronDensity_plot_params("SS", Dens_SS)
plot_all <- rbind(Dens_KM_plot, Dens_SS_plot)
library(ggplot2)
ggplot(plot_all, aes(dateGrid, densFinal, colour = ID)) +
geom_line(size = 0.5) +
theme_minimal(base_size = 14) +
xlab("calibrated years BP") +
ylab("Density") +
xlim(1000,4000)
# Input data from csv file
SOS049 <-  read.csv(file="data/GC-MS_exported_data_Figure5a.csv", header=TRUE, sep=",")
make_retention_times_plot(SOS049)
# Input data from csv file
KIM061 <- read.csv(file="data/GC-MS_exported_data_Figure5b.csv", header=TRUE, sep=",")
make_retention_times_plot_no_labels(KIM061)
library(kwakmarwick2015)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
getwd()
setwd("G:/My Documents/My Papers/Journal of Archaeological Science/Kwak and Marwick 2015/kwakmarwickjas2015/analysis")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
CSIA_KM_and_SS$C18.0 - CSIA_KM_and_SS$C16.0
CSIA_KM_and_SS
big_delta <- CSIA_KM_and_SS$C18.0 - CSIA_KM_and_SS$C16.0
big_delta <- data.frame(big_delta = big_delta,
C16.0 = CSIA_KM_and_SS$C16.0)
big_delta
big_delta <- data.frame(big_delta = big_delta,
C16.0 = CSIA_KM_and_SS$C16.0,
Site = CSIA_KM_and_SS$ID)
big_delta
big_delta <- CSIA_KM_and_SS$C18.0 - CSIA_KM_and_SS$C16.0
big_delta <- data.frame(big_delta = big_delta,
C16.0 = CSIA_KM_and_SS$C16.0,
Site = CSIA_KM_and_SS$ID)
big_delta
ggplot(big_delta, aes(C16.0, big_delta, colour = Site)) +
geom_point(size = 4)
ggplot(big_delta, aes(C16.0, big_delta, colour = Site)) +
geom_point(size = 4) +
xlim(-40,-10)
ggplot(big_delta, aes(C16.0, big_delta, colour = Site)) +
geom_point(size = 4) +
xlim(-40,-10) +
ylim(5,-7)
ggplot(big_delta, aes(C16.0, big_delta, colour = Site)) +
geom_point(size = 4) +
xlim(-40,-10) +
ylim(-7,5)
ggplot(big_delta, aes(C16.0, big_delta, colour = Site)) +
geom_point(size = 4) +
xlim(-40,-10) +
ylim(-7,5) +
theme_minimal()
ggplot(big_delta, aes(C16.0, big_delta, colour = Site)) +
geom_point(size = 4) +
xlim(-40,-10) +
ylim(-7,5) +
theme_minimal(base_size = 14)
library(viridis)
ggplot(plot_all, aes(dateGrid, densFinal, colour = ID)) +
geom_line(size = 0.5) +
theme_minimal(base_size = 14) +
xlab("calibrated years BP") +
ylab("Density") +
xlim(1000,4000) +
scale_color_discrete(colours = viridis(256))
```
ggplot(plot_all, aes(dateGrid, densFinal, colour = ID)) +
geom_line(size = 0.5) +
theme_minimal(base_size = 14) +
xlab("calibrated years BP") +
ylab("Density") +
xlim(1000,4000) +
scale_color_gradientn(colours = viridis(256))
ggplot(plot_all, aes(dateGrid, densFinal, colour = ID)) +
geom_line(size = 0.5) +
theme_minimal(base_size = 14) +
xlab("calibrated years BP") +
ylab("Density") +
xlim(1000,4000) +
scale_color_discrete(colours = viridis(256))
ggplot(plot_all, aes(dateGrid, densFinal, colour = ID)) +
geom_line(size = 0.5) +
theme_minimal(base_size = 14) +
xlab("calibrated years BP") +
ylab("Density") +
xlim(1000,4000) +
scale_color_manual(colours = viridis(256))
ggplot(plot_all, aes(dateGrid, densFinal, colour = ID)) +
geom_line(size = 0.5) +
theme_minimal(base_size = 14) +
xlab("calibrated years BP") +
ylab("Density") +
xlim(1000,4000) +
scale_color_manual(values = viridis(256))
ggplot(plot_all, aes(dateGrid, densFinal, colour = ID)) +
geom_line(size = 0.5) +
theme_minimal(base_size = 14) +
xlab("calibrated years BP") +
ylab("Density") +
xlim(1000,4000) +
scale_color_manual(values = viridis(1:256))
viridis(1:256)
viridis(256)
ggplot(plot_all, aes(dateGrid, densFinal, colour = ID)) +
geom_line(size = 0.5) +
theme_minimal(base_size = 14) +
xlab("calibrated years BP") +
ylab("Density") +
xlim(1000,4000) +
scale_color_manual(values = viridis(unique(plot_all$ID)))
viridis(unique(plot_all$ID))
unique(plot_all$ID)
ggplot(plot_all, aes(dateGrid, densFinal, colour = ID)) +
geom_line(size = 0.5) +
theme_minimal(base_size = 14) +
xlab("calibrated years BP") +
ylab("Density") +
xlim(1000,4000) +
scale_color_manual(values = viridis(length(unique(plot_all$ID))))
ggplot(big_delta, aes(C16.0, big_delta, colour = Site)) +
geom_point(size = 4) +
xlim(-40,-10) +
ylim(-7,5) +
theme_minimal(base_size = 14) +
scale_color_manual(values = viridis(length(unique(big_delta$Site))))
length(unique(big_delta$Site)))
length(unique(big_delta$Site))
scale_y_continuous
?scale_y_continuous
ggplot(big_delta, aes(C16.0, big_delta, colour = Site)) +
geom_point(size = 4) +
xlim(-40,-10) +
ylim(-7,5) +
theme_minimal(base_size = 14) +
scale_y_continuous(breaks=seq(-10, 5, 1)) +
scale_color_manual(values = viridis(length(unique(big_delta$Site))))
ggplot(big_delta, aes(C16.0, big_delta, colour = Site)) +
geom_point(size = 4) +
xlim(-40,-10) +
theme_minimal(base_size = 14) +
scale_y_continuous(breaks=seq(-10, 5, 1)) +
scale_color_manual(values = viridis(length(unique(big_delta$Site))))
install.packages("knitrBootstrap")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages(c("curl", "dplyr", "git2r", "httr", "manipulate", "plyr", "R6", "Rcpp", "RCurl", "rgdal", "rversions", "scales", "sp", "stringi", "wikipediatrend", "XML"))
library(kwakmarwick2015)

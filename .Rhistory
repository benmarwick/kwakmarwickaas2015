# Figure 4
# Input data from csv file
SOS049 <- read.csv(file="GC-MS_exported_data_Figure4.csv", header=TRUE, sep=",")
SOS049 <- read.csv(file="GC_MS_exported_data_Figure4.csv", header=TRUE, sep=",")
# Define colors to be used. r = "red", g = "forestgreen" b = "blue"
plot_colors <- c(rgb(r=0.0,g=0.0,b=0.9))
# Trim off excess margin space (bottom, left, top, right)
par(mar=c(4.2, 3.8, 0.2, 0.2))
# Create graph using values of retention time and area.
# Label axes with smaller font and use larger line widths.
plot(SOS049$retention, SOS049$area, type="l", col=plot_colors[1],
ylim=range(SOS049), axes=F, ann=T, las=1, lty=1,  bty="n", yaxt="n", xlab="retention time (min.)",
ylab="abundance")
# Make x axis tick marks without labels
axis(1, las=1)
axis(2, las=1)
###############################
# Figure 5
# read in data
CSIA_KM <- read.csv('~/JAS/CSIA_KM.csv', stringsAsFactors = FALSE)
# read in data
CSIA_KM <- read.csv('CSIA_KM.csv', stringsAsFactors = FALSE)
CSIA_SS <- read.csv('CSIA_SS.csv', stringsAsFactors = FALSE)
# combine both into one dataframe
CSIA_KM_and_SS <- rbind(CSIA_KM, CSIA_SS)
# get site ID to control plotting colour and shape
CSIA_KM_and_SS$ID <- substr(CSIA_KM_and_SS$Sample.No., 1, 2)
# plot
library
ggplot2
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
library("ggplot2")
library("ggplot2")
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab("C16:0 d13C") +
ylab("C18:0 d13C") +
xlim(-40,-10) +
ylim(-40,-10)
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(expression(delta*^13*C16:0) +
ylab("C18:0 d13C") +
xlim(-40,-10) +
ylim(-40,-10)
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(expression(delta)~[13]~C16~:~0)) +
ylab("C18:0 d13C") +
xlim(-40,-10) +
ylim(-40,-10)
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(expression(delta)~[13]~"C16"~":"~"0")) +
ylab("C18:0 d13C") +
xlim(-40,-10) +
ylim(-40,-10)
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(expression(delta)~[13]~"C16"~":"~"0"))
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(expression({}^208*"Pb/"*{}^206*"Pb")) +
ylab("C18:0 d13C") +
xlim(-40,-10) +
ylim(-40,-10)
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(expression({}^208*"Pb/"*{}^206*"Pb"))) +
ylab("C18:0 d13C") +
xlim(-40,-10) +
ylim(-40,-10)
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote({}^208*"Pb/"*{}^206*"Pb")) +
ylab("C18:0 d13C") +
xlim(-40,-10) +
ylim(-40,-10)
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta{}^13*"C 16:0 per mil")) +
ylab("C18:0 d13C") +
xlim(-40,-10) +
ylim(-40,-10)
library("ggplot2")
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta{}^13*"C 16:0 per mil"))
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 per mil")
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 per mil"))
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0"*permil))
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 "*permille)) +
ylab("C18:0 d13C") +
xlim(-40,-10) +
ylim(-40,-10)
library("ggplot2")
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 "*\u2030)) +
ylab("C18:0 d13C") +
xlim(-40,-10) +
ylim(-40,-10)
library("ggplot2")
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab("C18:0 d13C") +
xlim(-40,-10) +
ylim(-40,-10)
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
xlim(-40,-10) +
ylim(-40,-10)
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
labs(aesthetic='custom text') +
xlim(-40,-10) +
ylim(-40,-10)
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
labs(aesthetic = 'custom text') +
xlim(-40,-10) +
ylim(-40,-10)
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
scale_discrete(name = "Fancy Title")
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
scale_colour_discrete(name = "Fancy Title")
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
scale_shape_discrete(name = "Fancy Title")
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
guides(fill=guide_legend(title="New Legend Title"))
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID )) +
geom_point(size = 4, aes(shape = ID)) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
guides(colour=guide_legend(title="New Legend Title"))
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID, shape = ID )) +
geom_point(size = 4) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
guides(colour=guide_legend(title="New Legend Title"))
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID, shape = ID )) +
geom_point(size = 4) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
labs(colour="NEW LEGEND TITLE")
CSIA_KM_and_SS
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID, shape = ID )) +
geom_point(size = 4) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
labs(colour="NEW LEGEND TITLE", shape = "NEW LEGEND TITLE")
legend_title <- "Archaeological site"
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID, shape = ID )) +
geom_point(size = 4) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
labs(colour=legend_title, shape = legend_title) +
xlim(-40,-10) +
ylim(-40,-10)
legend_title <- "Archaeological \nsite"
ggplot(CSIA_KM_and_SS, aes(C16.0, C18.0, colour = ID, shape = ID )) +
geom_point(size = 4) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
labs(colour=legend_title, shape = legend_title) +
xlim(-40,-10) +
ylim(-40,-10)
plot(SOS049$retention, SOS049$area, type="l", col=plot_colors[1],
SOS049
ggplot(SOS049, aes(retention, area)) +
geom_line() +
theme_minimal(base_size = 14)
ggplot(SOS049, aes(retention, area)) +
geom_line() +
theme_minimal(base_size = 14) +
xlab("retention time (min)") +
ylab("abundance")
ggplot(SOS049, aes(retention, area)) +
geom_line() +
theme_minimal(base_size = 14) +
xlab("retention time (min)") +
ylab("abundance") +
scale_y_continuous(name="Fluorescent intensity/arbitrary units", labels = comma)
library(scales)
ggplot(SOS049, aes(retention, area)) +
geom_line() +
theme_minimal(base_size = 14) +
xlab("retention time (min)") +
ylab("abundance") +
scale_y_continuous(name="Fluorescent intensity/arbitrary units", labels = comma)
ggplot(SOS049, aes(retention, area)) +
geom_line() +
theme_minimal(base_size = 14) +
xlab("retention time (min)") +
scale_y_continuous(name="abundance", labels = comma)
ggplot(SOS049, aes(retention, area)) +
geom_line(colour = "blue") +
theme_minimal(base_size = 14) +
xlab("retention time (min)") +
scale_y_continuous(name="abundance", labels = comma)
make_retention_times_plot <- function(){
# Input data from csv file
SOS049 <- read.csv(file="GC_MS_exported_data_Figure4.csv", header=TRUE, sep=",")
# Create graph using values of retention time and area.
library(ggplot2)
library(scales)
ggplot(SOS049, aes(retention, area)) +
geom_line(colour = "blue") +
theme_minimal(base_size = 14) +
xlab("retention time (min)") +
scale_y_continuous(name="abundance", labels = comma)
}
make_retention_times_plot()
devtools::build()
devtools::build()
devtools::check()
devtools::use_vignette()
devtools::use_vignette("vignette.Rmd")
SOS049 <- read.csv(file="data/GC_MS_exported_data_Figure4.csv", header=TRUE, sep=",")
setwd("C:/Users/marwick/Downloads/kwak_marwick_jas/vignettes")
setwd("C:/Users/marwick/Downloads/kwak_marwick_jas/vignettes")
SOS049 <- read.csv(file="data/GC_MS_exported_data_Figure4.csv", header=TRUE, sep=",")
make_retention_times_plot(SOS049)
# This file contains two custom functions that read in data from the CSV files and draw the plots of the geochemical data.
###############################
#' make_retention_times_plot
#'
#' @return A plot of retention tims by abundance showing the result of a GC-MS analysis
#' @param the_data a data.frame of two columns labeled 'retention' and 'area'
#' @export
#'
#' @examples
#' make_retention_times_plot()
#'
#'
make_retention_times_plot <- function(the_data){
# Create graph using values of retention time and area.
library(ggplot2)
library(scales)
ggplot(the_data, aes(retention, area)) +
geom_line(colour = "blue") +
theme_minimal(base_size = 14) +
xlab("retention time (min)") +
scale_y_continuous(name="abundance", labels = comma)
}
###############################
#' make_C16_C18_scatter_plot
#'
#' @return A scatter plot of the C16:0 and C18:0 data for each sample
#' @param the_data a data.frame of two columns labeled 'C16.0' and 'C18.0'
#' @export
#'
#' @examples
#' make_C16_C18_scatter_plot()
#'
make_C16_C18_scatter_plot <- function(the_data){
# legend title
legend_title <- "Archaeological \nsite"
# plot
library("ggplot2")
ggplot(the_data, aes(C16.0, C18.0, colour = ID, shape = ID )) +
geom_point(size = 4) +
theme_minimal(base_size = 14) +
xlab(bquote(delta*{}^13*"C 16:0 \u2030")) +
ylab(bquote(delta*{}^13*"C 18:0 \u2030")) +
labs(colour=legend_title, shape = legend_title) +
xlim(-40,-10) +
ylim(-40,-10)
}
make_retention_times_plot(SOS049)
make_C16_C18_scatter_plot(CSIA_KM_and_SS)
library(kwakmarwickjas)
library(kwakmarwickjas2015)
